// <auto-generated />
using System;
using Hogwarts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hogwarts.Migrations.Hogwarts
{
    [DbContext(typeof(HogwartsContext))]
    partial class HogwartsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hogwarts.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("PoslednjePrijavljivanje")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("ZaposleniId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("ZaposleniId")
                        .IsUnique();

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumRegistracije = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@hogwarts.com",
                            IsActive = true,
                            PasswordHash = "admin123",
                            Role = "Admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Hogwarts.Models.Odsek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Opis")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Odseci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumKreiranja = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Naziv = "IT",
                            Opis = "Informacione tehnologije"
                        },
                        new
                        {
                            Id = 2,
                            DatumKreiranja = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Naziv = "HR",
                            Opis = "Ljudski resursi"
                        },
                        new
                        {
                            Id = 3,
                            DatumKreiranja = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Naziv = "Finansije",
                            Opis = "Finansijski sektor"
                        },
                        new
                        {
                            Id = 4,
                            DatumKreiranja = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Naziv = "Marketing",
                            Opis = "Marketing i prodaja"
                        });
                });

            modelBuilder.Entity("Hogwarts.Models.Plata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bonusi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Napomene")
                        .HasColumnType("text");

                    b.Property<decimal>("Osnovna")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Otkazi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("ZaposleniId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ZaposleniId");

                    b.ToTable("Plate");
                });

            modelBuilder.Entity("Hogwarts.Models.ZahtevZaOdmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DatumOdgovora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DatumZahteva")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NapomenaOdgovora")
                        .HasColumnType("text");

                    b.Property<int?>("OdobrioKorisnikId")
                        .HasColumnType("integer");

                    b.Property<string>("Razlog")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TipOdmora")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ZaposleniId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ZaposleniId");

                    b.ToTable("ZahteviZaOdmor");
                });

            modelBuilder.Entity("Hogwarts.Models.Zaposleni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("BrojTelefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ImeOca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int?>("OdsekId")
                        .HasColumnType("integer");

                    b.Property<string>("Pozicija")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("OdsekId");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("Hogwarts.Models.Korisnik", b =>
                {
                    b.HasOne("Hogwarts.Models.Zaposleni", "Zaposleni")
                        .WithOne()
                        .HasForeignKey("Hogwarts.Models.Korisnik", "ZaposleniId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Hogwarts.Models.Plata", b =>
                {
                    b.HasOne("Hogwarts.Models.Zaposleni", "Zaposleni")
                        .WithMany("Plate")
                        .HasForeignKey("ZaposleniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Hogwarts.Models.ZahtevZaOdmor", b =>
                {
                    b.HasOne("Hogwarts.Models.Zaposleni", "Zaposleni")
                        .WithMany("ZahteviZaOdmor")
                        .HasForeignKey("ZaposleniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Hogwarts.Models.Zaposleni", b =>
                {
                    b.HasOne("Hogwarts.Models.Odsek", "Odsek")
                        .WithMany("Zaposleni")
                        .HasForeignKey("OdsekId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Odsek");
                });

            modelBuilder.Entity("Hogwarts.Models.Odsek", b =>
                {
                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Hogwarts.Models.Zaposleni", b =>
                {
                    b.Navigation("Plate");

                    b.Navigation("ZahteviZaOdmor");
                });
#pragma warning restore 612, 618
        }
    }
}
